// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/**
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
    // Put your code here:
    /**
    Not(in=a, out=nota);
    Not(in=b, out=notb);
    Not(in=sel, out=notsel);
    And(a=a, b=b, out=aAndb);
    And(a=nota, b=b, out=notaAndb);
    And(a=notaAndb, b=sel, out=notaAndbAndsel);
    And(a=a, b=notb, out=aAndnotb);
    And(a=aAndnotb, b=notsel, out=aAndnotbAndnotsel);
    Or(a=aAndb, b=notaAndbAndsel, out=o1);
    Or(a=aAndnotbAndnotsel, b=o1, out=out);
    */
    Not(in=sel,out=notsel);

    // If sel == 0, then we want the value of a.
    // So notsel == 1 and this means that we use the bottom
    // 2 lines of the Nand truth table and a1 == Not(a)
    Nand(a=notsel,  b=a,  out=a1);

    // Similarly if sel = 0, then we use the top 2 lines
    // of the Nand truth table therfore b1 == 1
    Nand(a=sel,     b=b,  out=b1);

    // Finnaly, if b1 == 1 then looking at the
    // bottom 2 lines of the Nand truth table,
    // out == Not(a1) == Not(Not(a))) == a
    Nand(a=a1,      b=b1, out=out);
}
